name: Build Wheel

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

defaults:
  run:
    shell: bash -l {0}


jobs:
  osx:
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: [3.7, 3.8, 3.9]

    env:
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
      CXX: clang++
      CC: clang

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '10.3'

    - name: Build wheel
      run: |
        export SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
        bash ./scripts/build-osx-wheel.sh

    - name: List wheels
      run: ls wheelhouse

    - uses: actions/upload-artifact@v2
      with:
        name: wheelhouse
        path: wheelhouse/xeus_python-*.whl
        if-no-files-found: error

  linux:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    env:
      DOCKER_IMAGE: quay.io/pypa/manylinux2010_x86_64
      PLAT: manylinux2010_x86_64

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Pull docker image
      run: docker pull $DOCKER_IMAGE

    - name: Build wheel
      run: docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE /io/scripts/build-wheels.sh

    - name: List wheels
      run: ls wheelhouse

    - uses: actions/upload-artifact@v2
      with:
        name: wheelhouse
        path: wheelhouse/xeus_python-*.whl
        if-no-files-found: error

  windows:
    runs-on: windows-2019

    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: [3.7, 3.8, 3.9]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.PYTHON_VERSION }}
        mamba-version: "*"
        auto-activate-base: true
        channels: conda-forge

    - name: Install dependencies
      run: mamba install cmake perl nasm scikit-build

    - name: Build wheel
      shell: cmd
      run: |
        call "c:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        pip wheel --verbose .

    - name: Move wheels
      run: |
        mkdir wheelhouse
        mv *.whl wheelhouse

    - name: List wheels
      run: ls wheelhouse

    - uses: actions/upload-artifact@v2
      with:
        name: wheelhouse
        path: wheelhouse/xeus_python-*.whl
        if-no-files-found: error

  test-wheel:
    runs-on: ${{ matrix.os }}-latest
    needs: [linux, osx, windows]

    strategy:
      matrix:
        os: [ubuntu, macos]
        PYTHON_VERSION: [3.7, 3.8, 3.9]
        include:
          - PYTHON_VERSION: 3.7
            os: ubuntu
            whl: 'xeus_python-*-cp37*linux*.whl'
          - PYTHON_VERSION: 3.8
            os: ubuntu
            whl: 'xeus_python-*-cp38*linux*.whl'
          - PYTHON_VERSION: 3.9
            os: ubuntu
            whl: 'xeus_python-*-cp39*linux*.whl'
          - PYTHON_VERSION: 3.7
            os: macos
            whl: 'xeus_python-*-cp37*macos*.whl'
          - PYTHON_VERSION: 3.8
            os: macos
            whl: 'xeus_python-*-cp38*macos*.whl'
          - PYTHON_VERSION: 3.9
            os: macos
            whl: 'xeus_python-*-cp39*macos*.whl'
          - PYTHON_VERSION: 3.7
            os: windows
            whl: 'xeus_python-*-cp37*win*.whl'
          - PYTHON_VERSION: 3.8
            os: windows
            whl: 'xeus_python-*-cp38*win*.whl'
          - PYTHON_VERSION: 3.9
            os: windows
            whl: 'xeus_python-*-cp39*win*.whl'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: wheelhouse
        path: ./wheelhouse

    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.PYTHON_VERSION }}
        mamba-version: "*"
        auto-activate-base: false
        channels: conda-forge

    - name: Install deps
      run: mamba install pip pytest nbval ipympl

    - name: Install wheel
      run: pip install -vv ${{ matrix.whl }}
      working-directory: wheelhouse

    - name: Run test
      run: pytest test -vv
